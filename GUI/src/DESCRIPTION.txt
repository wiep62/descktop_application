1.  в майн создали JFrame (окно как в виндовсе)

        JFrame frame = new JFrame();
        frame.setSize(600, 400); разрешение
    - установим кнопку:
        требуется компановщик :
  frame.setLayout(new FlowLayout());
            и добавим компонент (кнопку):
        frame.add(new JButton("Click me : "));

                frame.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE); необходим для автоматического закрыти окна
        frame.setVisible(true); видимое окно, чтобы при запуске приложения можно было сформировать интерфейс (кнопки панель и т.д.)
        frame.setLocationRelativeTo(null); располдожение окна (по центру)
import javax.swing.*; - есть пакет ДЖАВА ВТ тоже для граф-го интерфейса , но свинг соновной и часто используемый

2.
**** ЕСЛИ ИНТЕРФЕЙС БОЛЬШОЙ ТОТ ТАК ДЕЛАТЬ СЛОЖНО и ДОЛГО, ЕСТЬ СПЕЦИАЛЬНЫЙ ГРАФИЧЕСКИЙ ОБЪЕКТ "ФОРМА" специально для того чтобы графический интерфейс был отделен от основного КОДА :
- создаем GUI Form
- BorderLayout (КОМПАНОВЩИК) в нем есть 5 зон (север, юг, запад, восток, центр) в этих зонах элементы растягиваются авт-ки
код будет формироваться в МаинФорм, когда в /ot/production/GUIExample/ будет формировать класс файл Main.class
- в mainForm.form назовем графическую панель  mainPanel
- добавляем форму в окно:
   - делаем метод который вернeт панель (MainForm.java)
   - нужно фрейму добавть панель из МАЙН ФОРМЫ, тогда он будет ее содержать (Main) :
          frame.add(new MainForm().getMainPanel());

 3. напишем прогу, которая будет считать длинну текста, которое ввели в текстовое поле:
- в центральную зоны доб. текст (JTextArea) назовем: textArea
- в южную зону кнопку, сначала добавим Jpanel а в нее Jbutton
-  Jpanel сделаем не БОРДЕРЛАЙАУТ а ФЛОУЛАЙОУТ
- назавем кнопку CountButton (вызывает действия подсчета)
- добавили кнопку clearButton для очистки текстового поля
- выравниваем кнопки по левому краю Alignment и выбираем
- т.к. текстовое поле занимает всю площадь окна необходимо добавить СПЕйСЕРЫ (горизонтальные, вертикальные) ОТСТУПЫ:
* в основной панели есть Vertical Gap, Horizontal Gap

ЕСЛИ РАБОТАТЬ С ГРАДЛ ТО ПРОГРАММА НЕ ХОЧЕТ РАБОТТАЬ ПОЭТОМУ НУЖНО БЫЛО ИСПОЛЬЗОВАТЬ ГРОВИ

4. настройка кнопок происходит через событие. нужно в конструторе это делать (MainForm) создаем новй Актион , создастся новый класс от ИНТЕРФЕЙСА АКТИОН
в нем есть метод actionPerformed() он будет вызван, когда кликнем по кнопке. ПИШЕМ ЕГО РАБОТУ
- делаем кнопку очистки clearButton.addActionListener(new Action()
- в конструкторе можно использовать переменные (кнопки и т.д.) т.к. они создадутся в классе до вызова конструктора, на уровне класс-файла
- делаем кнеопку подсчета countButton.addActionListener(new Action() {
в actionPerformed() получаем текст String text = textArea.getText(); и работаем с ним.
отображаем значение в всплывающем окне
- на каждое действие можно вешать обработчик на клики кнопок:
        * при клике по полю оно становилось желтым:         textArea.addMouseListener(new MouseListener() {






